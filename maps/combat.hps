float[] x(10); float[] y(10); float[] z(10); int last;

void OnStart()
{
	for(int i=0;i<10;i++) AddEntityCollideCallback("big_hammer", "enemy_"+i, "UseHammerOnEnemy", false, 1);
	AddTimer("big_hammer", 0.00f, "TimerHammerPosition");
}

void TimerHammerPosition(string &in asTimer)
{
	x[last] = GetEntityPosX(asTimer);
	y[last] = GetEntityPosY(asTimer);
	z[last] = GetEntityPosZ(asTimer);

	last = (last + 1) % 10;
	
	AddTimer(asTimer, 0.01f, "TimerHammerPosition");
}

float Distance(string &in asEntity, float x, float y, float z)
{
	return MathSqrt(MathPow(GetEntityPosX(asEntity) - x, 2) + MathPow(GetEntityPosY(asEntity) - y, 2) + MathPow(GetEntityPosZ(asEntity) - z, 2));
}

void UseHammerOnEnemy(string &in weapon, string &in enemy, int alState)
{	
	RemoveTimer(weapon);

	if(Distance(weapon, x[last], y[last], z[last]) > 1.0f)
	{
		PlaySoundAtEntity("", "MetalMediumBashFlesh.snt", weapon, 0, false);	
		CreateParticleSystemAtEntity("BloodyHit", "blood.ps", weapon, false);
		FadeEnemyToSmoke(enemy, false);
	}
	AddTimer(weapon, 0.01f, "TimerHammerPosition");
}
