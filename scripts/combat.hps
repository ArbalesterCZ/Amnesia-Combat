float[] x(10); float[] y(10); float[] z(10); int last;

void OnStart()
{
	for(int i=0;i<10;i++) AddEntityCollideCallback("big_hammer", "enemy_"+i, "UseWeaponOnEnemy", false, 1);
	TimerWeaponPosition("big_hammer");
}

void TimerWeaponPosition(string &in asWeapon)
{
	x[last] = GetEntityPosX(asWeapon);
	y[last] = GetEntityPosY(asWeapon);
	z[last] = GetEntityPosZ(asWeapon);

	last = (last + 1) % 10;

	AddTimer(asWeapon, 0.01f, "TimerWeaponPosition");
}

float Distance(string &in asWeapon, float x, float y, float z)
{
	return MathSqrt(MathPow(GetEntityPosX(asWeapon) - x, 2) + MathPow(GetEntityPosY(asWeapon) - y, 2) + MathPow(GetEntityPosZ(asWeapon) - z, 2));
}

void UseWeaponOnEnemy(string &in asWeapon, string &in asEnemy, int alState)
{
	if(Distance(asWeapon, x[last], y[last], z[last]) > 1.0f)
	{
		PlaySoundAtEntity("SoundHitEffect", "MetalMediumBashFlesh.snt", asWeapon, 0, false);
		CreateParticleSystemAtEntity("BloodyHit", "blood.ps", asWeapon, false);
		FadeEnemyToSmoke(asEnemy, false);
	}
}
